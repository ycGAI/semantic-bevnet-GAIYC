# 配置文件：config.yaml
# 适用于您的数据集：/media/gyc/Backup Plus3/gyc/thesis/raw_demo_rosbag/dataset

# 数据集路径配置
dataset:
  # 数据集根目录
  root_path: "/media/gyc/Backup Plus3/gyc/thesis/raw_demo_rosbag/dataset"
  
  # 要处理的序列列表（如果为空则处理所有序列）
  sequences:
    - "00"
    # 可以添加更多序列，如：
    # - "01"
    # - "02"

# 类别映射：从原始类别ID映射到新的类别ID
# 如果不需要重新映射，设置为 null
# 基于您之前提到的标注示例，您可能有以下类别：
class_mapping:
  1: 1  # 类别1（如车辆）
  2: 2  # 类别2（如行人）
  3: 3  # 类别3（如自行车）
  4: 4  # 类别4（如其他物体）
  # 如果不需要重新映射，请设置为:
  # class_mapping: null

# 标注文件格式配置
# 基于您的示例：1 0 0 0.0 0.0 0.0 0.0 0.0 0.86 10.15 1.08 4.36 0.06 0.0 0.0
annotation_format:
  # 字段索引（从0开始）
  class_id_index: 0      # 第1个字段：类别ID
  # 跳过字段 1-7（truncated, occluded, alpha, 2d bbox等）
  height_index: 8        # 第9个字段：高度(h)
  width_index: 9         # 第10个字段：宽度(w)  
  length_index: 10       # 第11个字段：长度(l)
  x_index: 11           # 第12个字段：x坐标
  y_index: 12           # 第13个字段：y坐标
  z_index: 13           # 第14个字段：z坐标
  rotation_y_index: 14   # 第15个字段：绕Y轴旋转角度
  
  # 最小字段数量
  min_fields: 15

# 过滤选项
filtering:
  # 是否只保留有标签的点（true）还是保留所有点但标记标签（false）
  keep_only_labeled_points: true
  
  # 边界框扩展因子（用于处理边界模糊的情况）
  # 1.0 = 不扩展，1.1 = 扩展10%，可以适当增大以包含更多边界点
  bbox_expansion_factor: 1.05
  
  # 最小点数阈值：如果边界框内点数少于此值，则忽略该边界框
  min_points_per_bbox: 5

# 坐标系配置（根据KITTI格式）
coordinate_system:
  # KITTI坐标系：x=前方, y=左侧, z=上方
  forward_axis: "x"
  left_axis: "y" 
  up_axis: "z"

# 输出配置
output:
  # 输出目录名称
  filtered_pointcloud_dir: "velodyne_filtered"
  segmentation_labels_dir: "labels_segmentation"
  
  # 是否保存统计信息
  save_statistics: true
  statistics_file: "conversion_stats.json"

# 可视化配置
visualization:
  # 可视化时的最大点数（用于加速显示）
  max_points_for_display: 10000
  
  # 颜色映射（用于可视化不同类别）
  class_colors:
    1: [1.0, 0.0, 0.0]    # 红色 - 类别1
    2: [0.0, 1.0, 0.0]    # 绿色 - 类别2
    3: [0.0, 0.0, 1.0]    # 蓝色 - 类别3
    4: [1.0, 1.0, 0.0]    # 黄色 - 类别4
    5: [1.0, 0.0, 1.0]    # 洋红 - 类别5
    6: [0.0, 1.0, 1.0]    # 青色 - 类别6

# 日志配置
logging:
  # 日志级别: DEBUG, INFO, WARNING, ERROR
  level: "INFO"
  
  # 是否保存日志到文件
  save_to_file: true
  log_file: "conversion.log"
  
  # 进度报告间隔（每处理多少个文件报告一次）
  progress_interval: 10

# 性能配置
performance:
  # 是否使用并行处理
  use_multiprocessing: true
  
  # 进程数（0表示使用CPU核心数，建议设置为CPU核心数的80-90%）
  num_processes: 0  # 0 = 自动检测并使用所有核心
  
  # 如果您想手动设置进程数，可以这样：
  # num_processes: 8  # 使用8个进程
  
  # 内存优化（如果内存不够，可以减少并发数）
  # num_processes: 4  # 较少的进程数以节省内存